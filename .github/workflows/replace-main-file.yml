---
name: Replace Main File with PR Version
on:
    pull_request:
        types:
            - opened
            - synchronize
            - labeled
    workflow_dispatch:
        inputs:
            file_path:
                description: 'Path to the file to replace'
                required: true
                default: 'package.json'
            pr_number:
                description: 'PR number to get file from'
                required: true

env:
    NODE_VERSION: 20.13.1
    TERM: xterm

jobs:
    replace-file:
        runs-on: ubuntu-22.04
        if: ${{ contains(github.event.label.name, 'Replace Main File') || github.event_name == 'workflow_dispatch' }}

        steps:
            - name: ci/checkout-repo
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: ci/setup-node
              uses: actions/setup-node@a57c6165b6296b7582531f72318bb9966f708e20 # v4.1.0
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: ci/configure-git
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

            - name: ci/get-pr-info
              id: pr-info
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                    PR_NUMBER="${{ github.event.inputs.pr_number }}"
                    FILE_PATH="${{ github.event.inputs.file_path }}"
                  else
                    PR_NUMBER="${{ github.event.pull_request.number }}"
                    FILE_PATH="package.json"  # Замените на нужный файл по умолчанию
                  fi

                  echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
                  echo "file_path=$FILE_PATH" >> $GITHUB_OUTPUT
                  echo "PR Number: $PR_NUMBER"
                  echo "File Path: $FILE_PATH"

            - name: ci/fetch-pr-branch
              run: |
                  PR_NUMBER="${{ steps.pr-info.outputs.pr_number }}"

                  # Получаем информацию о PR через GitHub API
                  PR_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")

                  PR_HEAD_REF=$(echo "$PR_INFO" | jq -r '.head.ref')
                  PR_HEAD_SHA=$(echo "$PR_INFO" | jq -r '.head.sha')

                  echo "PR Head Ref: $PR_HEAD_REF"
                  echo "PR Head SHA: $PR_HEAD_SHA"

                  # Переключаемся на main ветку
                  git checkout main
                  git pull origin main

                  # Забираем файл из PR ветки
                  git fetch origin "$PR_HEAD_REF:pr-branch-$PR_NUMBER"
                  git checkout "pr-branch-$PR_NUMBER" -- "${{ steps.pr-info.outputs.file_path }}"

            - name: ci/commit-and-push-changes
              run: |
                  FILE_PATH="${{ steps.pr-info.outputs.file_path }}"
                  PR_NUMBER="${{ steps.pr-info.outputs.pr_number }}"

                  # Проверяем, есть ли изменения
                  if git diff --quiet; then
                    echo "No changes detected in $FILE_PATH"
                    exit 0
                  fi

                  # Коммитим изменения
                  git add "$FILE_PATH"
                  git commit -m "chore: replace $FILE_PATH with version from PR #$PR_NUMBER

                  Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

                  # Пушим в main
                  git push origin main

            - name: ci/create-comment
              if: github.event_name != 'workflow_dispatch'
              uses: actions/github-script@v7
              with:
                  script: |
                      const { data: pullRequest } = await github.rest.pulls.get({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        pull_number: ${{ steps.pr-info.outputs.pr_number }}
                      });

                      await github.rest.issues.createComment({
                        issue_number: ${{ steps.pr-info.outputs.pr_number }},
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `File \`${{ steps.pr-info.outputs.file_path }}\` has been successfully replaced in main branch with the version from this PR.
                        
                        **Commit:** ${process.env.GITHUB_SHA}
                        **Workflow:** ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
                      });

    validate-changes:
        runs-on: ubuntu-22.04
        needs: replace-file
        if: always() && (needs.replace-file.result == 'success')

        steps:
            - name: ci/checkout-repo
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  ref: main

            - name: ci/setup-node
              uses: actions/setup-node@a57c6165b6296b7582531f72318bb9966f708e20 # v4.1.0
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: ci/validate-package-json
              run: |
                  # Проверяем, что package.json валидный
                  if [[ -f "package.json" ]]; then
                    echo "Validating package.json..."
                    node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
                    echo "package.json is valid"
                  fi

                  # Можно добавить дополнительные проверки
                  echo "Validation completed successfully"
